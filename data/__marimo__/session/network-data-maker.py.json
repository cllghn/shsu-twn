{
  "version": "1",
  "metadata": {
    "marimo_version": "0.11.8"
  },
  "cells": [
    {
      "id": "Hbol",
      "code_hash": "ba642ef1e3b5bc73d5d0ae9744844687",
      "outputs": [],
      "console": []
    },
    {
      "id": "MJUe",
      "code_hash": "41da0a2010abdbd911402f4cf8c770b9",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "vblA",
      "code_hash": "f318f63f7a1e7bc8ffed6ce3a40c2ef9",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><h2 id=\"background\">Background</h2>\n<span class=\"paragraph\">The purpose of this document is to extract the required data to generate a sociogram, or social network graph, of nodes involved in the Texas water system. The data was provided by Texas Water Development Board and it comes from the annual Water Use Survey. The inital data release included four datasets:</span>\n<ol>\n<li>PWS Intake: Water intake (self-supplied &amp; purchased) by water source for all Public Water Systems, 2022-2023. Includes USE County, Basin and SOURCE County, Basin. Does not include any water sales. All units are in gallons.</li>\n<li>PWS Sales: Water sales (wholesale to other PWS or industrial systems) reported by the seller and buyer. It is important to note that the volumes reported may not be the same between the seller and buyer- meter issues, leaks, etc. may cause inconsistent readings. Additionally, some sellers may not report a water sale to a PWS or vise-versa. All units are in gallons.</li>\n<li>PWS Retail: Retail water connections and volumes by category (Single Family, Multi-Family, Instititutional, Industrial, Commercial, Agricultural). Includes population served (reported in the Water Use Survey), total metered, and total un-metered. All units are in gallons.</li>\n<li>PWS-SurveyNo: Bridge table for TWDB Survey Numbers and TCEQ PWS Codes that includes PWS Name, whether system is a Wholesale system (Y / N), Water Use Survey Form Type, and PWS System Class.</li>\n</ol>\n<span class=\"paragraph\">From these datasets, we will derive the data required to generate the analytic sociogram. Briefly, a sociogram is a visual representation of social relationships or interactions within a group. To generate a sociogram, two key types of data are needed: an edge list and a node list. The node list contains information about the individual entities (or actors) in the network. In this situation, each node can represent a water source (e.g., aquifer), a water system, or an industrial system within the sociogram. At a minimum the we need to generate a node list with the following:</span>\n<ul>\n<li>A unique identifier for each node (e.g., ID or name).</li>\n<li>Optional attributes for the nodes, such as demographics, roles, or other characteristics.</li>\n</ul>\n<span class=\"paragraph\">Beyond the node list, in this document we also extract the required edge list. The edge list describes the relationships or interactions between the nodes. Each edge represents a connection between two nodes and includes:</span>\n<ul>\n<li>A pair of node identifiers (source and target).</li>\n<li>Optional attributes, such as the type, weight, or strength of the relationship.</li>\n</ul>\n<span class=\"paragraph\">With the list of requirements in hand, we can begin transforming our raw data.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "bkHC",
      "code_hash": "5c5ebd2c165833725d9b1f9132ae110b",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><h2 id=\"scoping\">Scoping</h2>\n<span class=\"paragraph\">After a high-level scan, it appears that the PWS Intake and PWS Sales files contain relational data that could be incorporated into the edge list. The former, links water sources to water systems. That is, each row in the table represents a water system intaking water from a water source (e.g., aquifer or surface water). For example, the first row in the dataset records Canadian River Municipal Water Authority's intake of groundwater from the Ogallala Aquifer. In this situation, the source node in an edge list would be the aquifer, which provides water to the target water system.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "lEQa",
      "code_hash": "1aaa0d37407059edc66178d6e4ec949b",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-ui-element object-id='lEQa-0' random-id='81808204-a034-7e3a-00b8-c07745e435ca'><marimo-table data-initial-value='[]' data-label='null' data-data='&quot;./@file/3781-67188-s8k87M6M.csv&quot;' data-total-rows='10' data-total-columns='30' data-banner-text='&quot;&quot;' data-pagination='true' data-page-size='10' data-field-types='[[&quot;Year&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;TWDB Survey No&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;PWS Name&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Water Type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Purchased / Self-Supplied&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;County Used&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Basin Used&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Source County&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Source Basin&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Aquifer Source&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Surface Water Source&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Seller Survey Number&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;Seller Name&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Active Wells&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;Brackish / Saline&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;TWDB Estimated?&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Percent Treated Prior to Intake&quot;, [&quot;number&quot;, &quot;float64&quot;]], [&quot; January &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; February &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; March &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; April &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; May &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; June &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; July &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; August &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; September &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; October &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; November &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; December &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Total Intake (Gallons) &quot;, [&quot;string&quot;, &quot;object&quot;]]]' data-show-filters='true' data-show-download='true' data-show-column-summaries='true' data-row-headers='[]' data-has-stable-row-id='false'></marimo-table></marimo-ui-element>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "PKri",
      "code_hash": "a2bf07886d67ea906384e10b203c7739",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><span class=\"paragraph\">Similarly, the latter dataset links water sales from water systems to other water systems or industrial customers. Each row represents a transaction in which water is sold from one entity to another. For example, the first row illustrates the purchase of water by the Amarillo MWS from the Canadian River Municipal Water Authority. In this situation, the source node would be the Canadian River Municipal Water Authority, and the target node would be the buyer.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "Xref",
      "code_hash": "16123e5ca978adb54e08c0aa8b2f2344",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-ui-element object-id='Xref-0' random-id='32d7eb3e-085a-c0d3-1458-825e41340cad'><marimo-table data-initial-value='[]' data-label='null' data-data='&quot;./@file/372-67188-ra83AHGb.csv&quot;' data-total-rows='1' data-total-columns='13' data-banner-text='&quot;&quot;' data-pagination='true' data-page-size='10' data-field-types='[[&quot;Year&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;TWDB Seller Survey No&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;PWS Name&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Seller County&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Seller Water Type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Seller Volume Reported &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Buyer Survey No&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;Buyer Name&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Buyer Water Type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Buyer Volume Reported &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Buyer NAICS Code&quot;, [&quot;number&quot;, &quot;float64&quot;]], [&quot; Volume Used In Net Use &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Volume Source Used In Net Use&quot;, [&quot;string&quot;, &quot;object&quot;]]]' data-show-filters='true' data-show-download='true' data-show-column-summaries='true' data-row-headers='[]' data-has-stable-row-id='false'></marimo-table></marimo-ui-element>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "SFPL",
      "code_hash": "7dde00e111f7a819dbb46863f96c49f1",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><span class=\"paragraph\">Regarding non-relational data, those appear to be located within the PWS Retail and PWS Survey-No files. The former includes information on units served by a water system in a given year. Since those units are not unique nodes, they cannot be considered individual entities within the sociogram. For example, the Upper Leon River MWD and the White River MWD serve single-family homes; however, those single-family homes are not unique entities. The label encompasses a category of units served; as such, this will be recorded as an attribute in the node list.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "BYtC",
      "code_hash": "bb305240fbd1089df8b64a66eb97336f",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-ui-element object-id='BYtC-0' random-id='ab3afe9b-6f12-7226-4102-edec3e5c3cf8'><marimo-table data-initial-value='[]' data-label='null' data-data='&quot;./@file/583-67188-c0CGCbLI.csv&quot;' data-total-rows='1' data-total-columns='21' data-banner-text='&quot;&quot;' data-pagination='true' data-page-size='10' data-field-types='[[&quot;Year&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;TWDB Survey No&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;PWS Name&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;TWDB Estimated?&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Population Served &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Single Family Volumes &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Single Family Connections &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Multi-Family Volumes &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Multi-Family Connections &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Commercial Volume &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Commercial Connections &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Industrial Volumes &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Industrial Connections &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Institutional Volume &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Institutional Connections &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Agricultural Volumes &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Agricultural Connections &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Total Metered Volume &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Total Metered Connections &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Total Un-metered Volume &quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot; Total Un-metered Connections &quot;, [&quot;string&quot;, &quot;object&quot;]]]' data-show-filters='true' data-show-download='true' data-show-column-summaries='true' data-row-headers='[]' data-has-stable-row-id='false'></marimo-table></marimo-ui-element>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "RGSE",
      "code_hash": "12321a21220ff206c987c57c5d9e5639",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><span class=\"paragraph\">On the other hand, the PWS Survey-No file includes attributes of the water systems such as the system class, name, etc. These features are then a match for the node list.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "Kclp",
      "code_hash": "31e57fb68fbd1d8ac171cc20263e57ac",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-ui-element object-id='Kclp-0' random-id='ea453775-7163-d7ff-6d3f-2c8cedddf057'><marimo-table data-initial-value='[]' data-label='null' data-data='&quot;./@file/188-67188-j9XIr9rX.csv&quot;' data-total-rows='1' data-total-columns='6' data-banner-text='&quot;&quot;' data-pagination='true' data-page-size='10' data-field-types='[[&quot;TWDB Survey Number&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;TCEQ PWS Code&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;PWS Name&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Wholesale System?&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;Water Use Survey Form Type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;PWS System Class&quot;, [&quot;string&quot;, &quot;object&quot;]]]' data-show-filters='true' data-show-download='true' data-show-column-summaries='true' data-row-headers='[]' data-has-stable-row-id='false'></marimo-table></marimo-ui-element>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "emfo",
      "code_hash": "176e1fc8495b1483d399f0cecbabba5c",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><h2 id=\"generating-an-edge-list\">Generating an Edge List</h2>\n<span class=\"paragraph\">We need to extact data from two files, intake and sales, in a standard format that can be used as an edge list and in turn converted into a JSON, which is required by the front-end application. As a table, the edge list must include the following fields:</span>\n<ul>\n<li>Source: The starting point or origin of a connection. It represents the node initiating or \"sending\" the relationship.</li>\n<li>Target: The endpoint or recipient of the connection. It represents the node \"receiving\" the relationship.</li>\n<li>Id: An optional unique identifier assigned to each edge (connection) in the network. It serves as a reference to distinguish and manage individual edges, particularly when you need to track, modify, or annotate specific relationships. This field is a requirement for Cytoscape, the graphing library used in the front-end application. For simplicity, the unique id is created by combining the type string with the row index for each observation.</li>\n</ul>\n<span class=\"paragraph\">Beyond these mandatory fields, we could include the following edge attributes which appear to be available in both datasets for each record:</span>\n<ul>\n<li>Volume: Water volume exchanged between the source and target in each record, in gallons.</li>\n<li>Type: Categorical value denoting the type of exchange represented in the connection (e.g., intake or sale).</li>\n<li>Year: Year of transaction.</li>\n<li>Other relevant fields.</li>\n</ul>\n<span class=\"paragraph\">The resulting table would then look something like this:</span>\n<div class=\"codehilite\"><pre><span></span><code>| source | target | id       | volume | type   | year |\n|--------|--------|----------|--------|--------|------|\n| Node A | Node B | intake_1 | 100    | intake | 2022 |\n| Node B | Node C | sale_1   | 100    | sale   | 2023 |\n|                       ...                           |\n</code></pre></div></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "Hstk",
      "code_hash": "1c7f92d1dea192385811b78d4644b93a",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><span class=\"paragraph\">First, let's extract the relevant data from the <code>PWS Intake_2022-2023.csv</code> file. The following is a list of steps taken in Python to read, clean, and reshape the data into an edge list in the format noted above:</span>\n<ol>\n<li>Read the CSV as is.</li>\n<li>Assign the <code>TWDB Survey No</code> column as the <code>target</code> field.</li>\n<li>\n<span class=\"paragraph\">Determine the <code>source</code> based on the following logic:</span>\n<ul>\n<li>If the water type is reuse and the water is self-supplied, the source is the TWDB Survey Number. A self-loop in the network.</li>\n<li>If the water is purchased, the source is the Seller Survey Number.</li>\n<li>If the water type is groundwater and the water is self-supplied, the source is the Aquifer Source. If the Aquifer Source is \"OTHER AQUIFER\", the source is the Source Basin.</li>\n<li>If the water type is surface water and the water is self-supplied, the source is the Surface Water Source. If the Surface Water Source is \"UNKNOWN\", the source is the Source Basin.</li>\n</ul>\n</li>\n<li>\n<span class=\"paragraph\">Add an <code>id</code> field with the <code>'intake'</code> string.</span>\n</li>\n<li>Assigning new variable names to existing ones for consistency later on.</li>\n<li>Creating a <code>source_file</code> variable with the file name to ensure that data provenance can be tracked.</li>\n<li>Optionally, filter for year.</li>\n<li>Select only relevant columns (<code>source</code>, <code>target</code>, <code>id</code>, <code>volume</code>, <code>type</code>, <code>year</code>, <code>water_type</code>, <code>purchased_self</code>, <code>source_file</code>).</li>\n</ol>\n<span class=\"paragraph\">The resulting table head is presented below.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "nWHF",
      "code_hash": "415dec9bc6dc9a88acc945c62bb91c8f",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-ui-element object-id='nWHF-0' random-id='95e3e925-d709-0ee4-fbdf-dab2ace98b0b'><marimo-table data-initial-value='[]' data-label='null' data-data='&quot;./@file/1267-67188-jYW5PHiA.csv&quot;' data-total-rows='10' data-total-columns='9' data-banner-text='&quot;&quot;' data-pagination='true' data-page-size='10' data-field-types='[[&quot;source&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;target&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;id&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;yearly_volume&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;year&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;water_type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;purchased_self&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;source_file&quot;, [&quot;string&quot;, &quot;object&quot;]]]' data-show-filters='true' data-show-download='true' data-show-column-summaries='true' data-row-headers='[&quot;&quot;]' data-has-stable-row-id='false'></marimo-table></marimo-ui-element>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "iLit",
      "code_hash": "7c782b6b0f14d6fabcd6546aaffaf264",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><span class=\"paragraph\">Next, let's apply a similar threatment to the <code>PWS Sales_2022-2023.csv</code> file. Like before, the following is a list of the steps applied in Python to read, clean, and transform the data into an edge list:</span>\n<ol>\n<li>Read in the file as is.</li>\n<li>Assign the <code>TWDV Seller Survey No</code> as the <code>source</code>.</li>\n<li>Assign the <code>Buyer Survey No</code> as the <code>target</code>.</li>\n<li>Assign preset columns.</li>\n<li>Generate <code>id</code>.</li>\n<li>Creating a <code>source_file</code> variable with the file name to ensure that data provenance can be tracked.</li>\n<li>Optionally, filter for year.</li>\n<li>Select only relevant columns (<code>source</code>, <code>target</code>, <code>id</code>, <code>volume</code>, <code>type</code>, <code>year</code>, <code>water_type</code>, <code>purchased_self</code>, <code>source_file</code>).</li>\n</ol>\n<span class=\"paragraph\">The resulting table head is presented below.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "ZHCJ",
      "code_hash": "dea6fcbef594c9070fd70fd26cf877f4",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-ui-element object-id='ZHCJ-0' random-id='7731f9cd-70fc-dc14-30ed-434d58a47d6b'><marimo-table data-initial-value='[]' data-label='null' data-data='&quot;./@file/967-67188-FHQV7hTC.csv&quot;' data-total-rows='10' data-total-columns='9' data-banner-text='&quot;&quot;' data-pagination='true' data-page-size='10' data-field-types='[[&quot;source&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;target&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;id&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;yearly_volume&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;year&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;water_type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;purchased_self&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;source_file&quot;, [&quot;string&quot;, &quot;object&quot;]]]' data-show-filters='true' data-show-download='true' data-show-column-summaries='true' data-row-headers='[&quot;&quot;]' data-has-stable-row-id='false'></marimo-table></marimo-ui-element>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "ROlb",
      "code_hash": "e0eb327aadd0eb200ac2479877f997f9",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><span class=\"paragraph\">With both edge lists made, we can row bind these tables together. The following table is the resulting edge list.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "qnkX",
      "code_hash": "57280cae52d9cc8b4335c179227d952e",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-ui-element object-id='qnkX-0' random-id='4594aa0a-8310-81ca-0261-f51628bac859'><marimo-table data-initial-value='[]' data-label='null' data-data='&quot;./@file/1267-67188-cUh2nBGs.csv&quot;' data-total-rows='10' data-total-columns='9' data-banner-text='&quot;&quot;' data-pagination='true' data-page-size='10' data-field-types='[[&quot;source&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;target&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;id&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;yearly_volume&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;year&quot;, [&quot;integer&quot;, &quot;int64&quot;]], [&quot;water_type&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;purchased_self&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;source_file&quot;, [&quot;string&quot;, &quot;object&quot;]]]' data-show-filters='true' data-show-download='true' data-show-column-summaries='true' data-row-headers='[&quot;&quot;]' data-has-stable-row-id='false'></marimo-table></marimo-ui-element>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "TqIu",
      "code_hash": "4c5cc2f49f7afb72551ea0fda299c354",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><h2 id=\"generating-a-node-list\">Generating a Node List</h2>\n<span class=\"paragraph\">With the edge list completed, we now turn our attention to generating node list from multiple files (e.g., PWS Retail and Survey-No) and the edge list. The process will require a base table with unique identifiers for the nodes on the edge list. Roughly speaking, these come in two flavors, water sources and water systems. Water sources represent aquifers and surface water, while water systems represent public water systems (PWS) and industrial systems.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "Vxnm",
      "code_hash": "c84ecf4d79960567b9a78ea5e3032927",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-ui-element object-id='Vxnm-0' random-id='aa06389f-f069-928b-f552-995e665ea02e'><marimo-table data-initial-value='[]' data-label='null' data-data='&quot;./@file/371-67188-LtiB6XHJ.csv&quot;' data-total-rows='10' data-total-columns='2' data-banner-text='&quot;&quot;' data-pagination='true' data-page-size='10' data-field-types='[[&quot;id&quot;, [&quot;string&quot;, &quot;object&quot;]], [&quot;preliminary_type&quot;, [&quot;string&quot;, &quot;object&quot;]]]' data-show-filters='true' data-show-download='true' data-show-column-summaries='true' data-row-headers='[]' data-has-stable-row-id='false'></marimo-table></marimo-ui-element>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "DnEU",
      "code_hash": "fc8911555c9116d0e93e9420bd0450e5",
      "outputs": [],
      "console": []
    },
    {
      "id": "ulZA",
      "code_hash": "26323e94b01c722fca70b141757d8170",
      "outputs": [],
      "console": []
    },
    {
      "id": "ecfG",
      "code_hash": "3ac75d631aad0e52a1b7ab93753a1c4b",
      "outputs": [],
      "console": []
    },
    {
      "id": "Pvdt",
      "code_hash": "893a5a00d84479906b67f9d0bc0e2053",
      "outputs": [],
      "console": []
    },
    {
      "id": "ZBYS",
      "code_hash": "9a8f5ae363eda1ff852e78d57749535c",
      "outputs": [],
      "console": []
    },
    {
      "id": "aLJB",
      "code_hash": "a896ba516bd3c323a70de4929780a8d2",
      "outputs": [],
      "console": []
    },
    {
      "id": "nHfw",
      "code_hash": "81a0e32a77c2d02f9aba2e068cef970b",
      "outputs": [],
      "console": []
    },
    {
      "id": "xXTn",
      "code_hash": "5f0f465b819f01db3455e23c2ba48771",
      "outputs": [],
      "console": []
    },
    {
      "id": "AjVT",
      "code_hash": "f176918c2149e36a3ca1e0175f8a2c78",
      "outputs": [],
      "console": []
    },
    {
      "id": "pHFh",
      "code_hash": "8d025991a047474cd0453c94a32e6520",
      "outputs": [],
      "console": []
    },
    {
      "id": "NCOB",
      "code_hash": "e26ed47eef46d18f2818d867a7d8a382",
      "outputs": [],
      "console": []
    },
    {
      "id": "aqbW",
      "code_hash": "b0163a0d022c1f37f7f28f4f33afd80d",
      "outputs": [],
      "console": []
    },
    {
      "id": "TRpd",
      "code_hash": "3a9560cd860810c2d6bec69fc5023f90",
      "outputs": [],
      "console": []
    },
    {
      "id": "TXez",
      "code_hash": "162336493eab0ade43436c5e4c91b4ad",
      "outputs": [],
      "console": []
    },
    {
      "id": "dNNg",
      "code_hash": "951630fb1e2171940de65562b7fde9cd",
      "outputs": [],
      "console": []
    },
    {
      "id": "yCnT",
      "code_hash": "72eb7bc23b10f0fd630520624656b40d",
      "outputs": [],
      "console": []
    },
    {
      "id": "wlCL",
      "code_hash": "f32710455f65f89c425118e32b21d094",
      "outputs": [],
      "console": []
    },
    {
      "id": "kqZH",
      "code_hash": "b5cead11f0d67d951a2b7c4dab3a94d7",
      "outputs": [],
      "console": []
    },
    {
      "id": "wAgl",
      "code_hash": "e5ae811000faf15bcc09b506c695b9fc",
      "outputs": [],
      "console": []
    },
    {
      "id": "rEll",
      "code_hash": "85bc61cf8007fa982e88c9fde45113cf",
      "outputs": [],
      "console": []
    },
    {
      "id": "dGlV",
      "code_hash": "1ba9e96e76013581d92cdd5336127691",
      "outputs": [],
      "console": []
    },
    {
      "id": "SdmI",
      "code_hash": "e19dffc9746d3e4a3ea4038d33b541fa",
      "outputs": [],
      "console": []
    },
    {
      "id": "lgWD",
      "code_hash": "7624b919f8208561ed0d393028b1a275",
      "outputs": [],
      "console": []
    },
    {
      "id": "yOPj",
      "code_hash": "99f7b44e9e287006eeac690aa991536f",
      "outputs": [],
      "console": []
    },
    {
      "id": "fwwy",
      "code_hash": "8ead933555ae185c71460c9abc5b5e93",
      "outputs": [],
      "console": []
    },
    {
      "id": "LJZf",
      "code_hash": "57815b08640a545acc4e0eb75d138e77",
      "outputs": [],
      "console": []
    },
    {
      "id": "urSm",
      "code_hash": "faee9fc9a36e0f58db4e854dc50ef679",
      "outputs": [],
      "console": []
    },
    {
      "id": "jxvo",
      "code_hash": "8ce033d227f6bfdc8b9adac0883e2b1a",
      "outputs": [],
      "console": []
    },
    {
      "id": "mWxS",
      "code_hash": "2a81625c26e235f96058a71e51c549ae",
      "outputs": [],
      "console": []
    },
    {
      "id": "PjZm",
      "code_hash": null,
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><h2 id=\"wholesale-data\">Wholesale Data</h2></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "CcZR",
      "code_hash": "95dd51cb77f503a28b6dd402f626cd12",
      "outputs": [],
      "console": []
    },
    {
      "id": "YWSi",
      "code_hash": "89e5f7893321d81db20d145383065d42",
      "outputs": [],
      "console": []
    },
    {
      "id": "zlud",
      "code_hash": "afc0d0a3de0e825de577ceb4f674c3ad",
      "outputs": [],
      "console": []
    },
    {
      "id": "tZnO",
      "code_hash": "8feb3d3eb533769b77d917a7d24fc61b",
      "outputs": [],
      "console": []
    },
    {
      "id": "xvXZ",
      "code_hash": "47008ae2ea346c384dce2687f0ba976b",
      "outputs": [],
      "console": []
    },
    {
      "id": "CLip",
      "code_hash": "0f1de9040de9f239c4ebd93ee4e8f297",
      "outputs": [],
      "console": []
    },
    {
      "id": "YECM",
      "code_hash": "42ef7d022490954aa0bce6fb49001df4",
      "outputs": [],
      "console": []
    },
    {
      "id": "cEAS",
      "code_hash": "c33b365194396e5269c7190755f67a16",
      "outputs": [],
      "console": []
    },
    {
      "id": "iXej",
      "code_hash": "741c242e871441d6b837894aa2bb8dbb",
      "outputs": [],
      "console": []
    }
  ]
}